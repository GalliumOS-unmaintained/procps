Description: set some tests to unsupported
Bug-Debian: http://bugs.debian.org/710851
Last-Update: 2013-06-06

Index: procps/testsuite/pgrep.test/pgrep.exp
===================================================================
--- procps.orig/testsuite/pgrep.test/pgrep.exp	2013-12-16 22:19:06.938690769 +1100
+++ procps/testsuite/pgrep.test/pgrep.exp	2013-12-16 22:19:06.934690797 +1100
@@ -9,7 +9,7 @@
 set gid [ exec id -g ]
 set not_gid [ expr { $gid + 1 } ] 
 set ps "${topdir}ps/pscommand"
-set raw_tty [ exec tty ]
+set have_tty [ catch { exec tty } raw_tty ]
 regexp "/dev/(.+)" $raw_tty > tty
 
 set test "pgprep with no arguments"
@@ -86,8 +86,12 @@
 expect_blank "$test"
 
 set test "pgrep matches on tty"
+if { $have_tty eq 0 } {
 spawn $pgrep -t $tty $testproc_comm
 expect_pass "$test" "^$testproc1_pid\\s+$testproc2_pid\\s*$"
+} else {
+unsupported "$test"
+}
 
 set test "pgrep doesn't match with bogus tty"
 spawn $pgrep -t glass $testproc_comm
Index: procps/testsuite/pkill.test/pkill.exp
===================================================================
--- procps.orig/testsuite/pkill.test/pkill.exp	2013-12-16 22:19:06.938690769 +1100
+++ procps/testsuite/pkill.test/pkill.exp	2013-12-16 22:19:06.934690797 +1100
@@ -9,7 +9,7 @@
 set gid [ exec id -g ]
 set not_gid [ expr { $gid + 1 } ] 
 set ps "${topdir}ps/pscommand"
-set raw_tty [ exec tty ]
+set have_tty [ catch { exec tty} raw_tty ]
 regexp "/dev/(.+)" $raw_tty > tty
 
 set test "pkill with no arguments"
Index: procps/testsuite/ps.test/ps_output.exp
===================================================================
--- procps.orig/testsuite/ps.test/ps_output.exp	2013-12-16 22:19:06.938690769 +1100
+++ procps/testsuite/ps.test/ps_output.exp	2013-12-16 22:19:06.934690797 +1100
@@ -9,8 +9,8 @@
 set not_uid [ expr { $uid + 1 } ] 
 set gid [ exec id -g ]
 set not_gid [ expr { $gid + 1 } ] 
-set raw_tty [ exec tty ]
-regexp "/dev/(.+)" $raw_tty > tty
+#set has_tty [ catch { exec tty} raw_tty ]
+#regexp "/dev/(.+)" $raw_tty > tty
 
 # All the fields
 # Cannot do args,cmd,comm
Index: procps/testsuite/pwdx.test/pwdx.exp
===================================================================
--- procps.orig/testsuite/pwdx.test/pwdx.exp	2013-12-16 22:19:06.938690769 +1100
+++ procps/testsuite/pwdx.test/pwdx.exp	2013-12-16 22:19:06.934690797 +1100
@@ -12,9 +12,10 @@
 
 # Run pwdx with existing pid
 set test "pwdx finds sleep in cwd"
-set sleep_pid [ exec sleep 600 & ]
-set sleep_pwd [ pwd ]
-spawn $pwdx $sleep_pid
-expect_pass "$test" "^$sleep_pid: $sleep_pwd"
-exec kill $sleep_pid
+#set sleep_pid [ exec sleep 600 & ]
+#set sleep_pwd [ pwd ]
+#spawn $pwdx $sleep_pid
+#expect_pass "$test" "^$sleep_pid: $sleep_pwd"
+#exec kill $sleep_pid
+untested "$test"
 
Index: procps/testsuite/vmstat.test/vmstat.exp
===================================================================
--- procps.orig/testsuite/vmstat.test/vmstat.exp	2013-12-16 22:19:06.938690769 +1100
+++ procps/testsuite/vmstat.test/vmstat.exp	2013-12-16 22:20:58.457898431 +1100
@@ -26,8 +26,9 @@
 }
 
 set test "vmstat disk information (-d option)"
-spawn $vmstat -d
-expect_pass "$test" "^disk\[ -\]+reads\[ -\]+writes\[ -\]+IO\[ -\]+\\s+total\\s+merged\\s+sectors\\s+ms\\s+total\\s+merged\\s+sectors\\s+ms\\s+cur\\s+sec\\s+"
+#spawn $vmstat -d
+#expect_pass "$test" "^disk\[ -\]+reads\[ -\]+writes\[ -\]+IO\[ -\]+\\s+total\\s+merged\\s+sectors\\s+ms\\s+total\\s+merged\\s+sectors\\s+ms\\s+cur\\s+sec\\s+"
+untested "$test"
 
 # Need a partition
 set diskstats [ exec cat /proc/diskstats ]
